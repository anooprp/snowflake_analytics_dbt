version: "3.8"

services:
  dbt:
    image: ghcr.io/dbt-labs/dbt-snowflake:1.6.5
    container_name: snowflake_analytics_dbt
    environment:
      - SNOWFLAKE_ACCOUNT=${SNOWFLAKE_ACCOUNT}
      - SNOWFLAKE_DEV_ACCOUNT=${SNOWFLAKE_DEV_ACCOUNT}
      - SNOWFLAKE_USER=${SNOWFLAKE_USER}
      - SNOWFLAKE_DEV_USER=${SNOWFLAKE_DEV_USER}
      - SNOWFLAKE_PASSWORD=${SNOWFLAKE_PASSWORD}
      - SNOWFLAKE_DEV_PASSWORD=${SNOWFLAKE_DEV_PASSWORD}
      - SNOWFLAKE_ROLE=${SNOWFLAKE_ROLE}
      - SNOWFLAKE_DEV_ROLE=${SNOWFLAKE_DEV_ROLE}
    volumes:
      - ./:/usr/app
      - ./profiles:/root/.dbt
    ports:
      - "8081:8081"
    working_dir: /usr/app
    entrypoint: ["tail", "-f", "/dev/null"]

  db:
    image: postgres:15
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  airflow:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    image: custom_airflow_dbt:latest
    container_name: airflow
    restart: always
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@db:5432/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      DATABASE_URL: postgresql://postgres:postgres@db:5432/airflow
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./:/usr/app
      # Removed logs mount to avoid permission issues
    ports:
      - "8080:8080"
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --password admin --firstname admin --lastname admin --role Admin --email admin@example.com &&
        airflow scheduler & airflow webserver
      "
  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    environment:
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - ./metabase-data:/metabase-data
volumes:
  pgdata:
